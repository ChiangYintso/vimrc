#!/bin/bash

alias fzfcd='cd "$(find * -type d | fzf)"'

source ~/vimrc/root/fzf/key-bindings.bash
source ~/vimrc/root/fzf/completion.bash

export FZF_TMUX=1
# Use ** as the trigger sequence
export FZF_COMPLETION_TRIGGER='**'

# Options to fzf command
export FZF_COMPLETION_OPTS='--border --info=inline'

# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

# Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments to fzf.
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf --preview 'tree -C {} | head -200'   "$@" ;;
    export|unset) fzf --preview "eval 'echo \$'{}"         "$@" ;;
    ssh)          fzf --preview 'dig {}'                   "$@" ;;
    *)            fzf --preview 'batcat -n --color=always {}' "$@" ;;
  esac
}

# sudo apt install bat
# alias "bat=batcat" in Ubuntu

# https://github.com/junegunn/fzf/blob/master/ADVANCED.md#using-fzf-as-interactive-ripgrep-launcher
rfv() {
	# 1. Search for text in files using Ripgrep
	# 2. Interactively restart Ripgrep with reload action
	# 3. Open the file in Vim
	RG_PREFIX="rg --column --line-number --no-heading --color=always --smart-case "
	INITIAL_QUERY="${*:-}"
	IFS=: read -ra selected < <(
	FZF_DEFAULT_COMMAND="$RG_PREFIX $(printf %q "$INITIAL_QUERY")" \
		fzf --ansi \
		--disabled --query "$INITIAL_QUERY" \
		--bind "change:reload:sleep 0.1; $RG_PREFIX {q} || true" \
		--delimiter : \
		--preview 'batcat --color=always {1} --highlight-line {2}' \
		--preview-window 'up,60%,border-bottom,+{2}+3/3,~3'
	)
	[ -n "${selected[0]}" ] && vim "${selected[0]}" "+${selected[1]}"
}

rff() {
	# search file contains <file path>:<line number>:
	# which can be generated by
	# 1) rg --vimgrep
	# 2) :YankPathLine
	# type `gF` in vim can jump to the line
	IFS=: read -ra selected < <(
	FZF_DEFAULT_COMMAND="rg --no-line-number -e ^.+:.+: $1" \
		fzf --ansi \
		--disabled --query "$INITIAL_QUERY" \
		--bind "change:reload:sleep 0.1; $RG_PREFIX {q} || true" \
		--delimiter : \
		--preview 'batcat --color=always {1} --highlight-line {2}' \
		--preview-window 'up,60%,border-bottom,+{2}+3/3,~3'
	)
	[ -n "${selected[0]}" ] && vim "${selected[0]}" "+${selected[1]}"
}

