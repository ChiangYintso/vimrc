#!/bin/bash

# https://superuser.com/questions/455944/vimdiff-and-git-all-at-once
vimdf() {
	if [[ $1 == -h ]]; then
		echo "Usage: vimdf <commit1> <commit2> <dir>"
		echo "	<commit1>, <commit2> and <dir> can be empty string."
		echo "It executes"
		echo "	git diff <commit1> <commit2> --name-only <dir>"
		echo "Example:"
		echo "	diff between current working tree and HEAD in src directory:"
		echo "		vimdf '' '' src"
		return 1
	fi
	commit1=$1
	commit2=$2
	dir=$3

	files=`git diff ${commit1} ${commit2} --name-only ${dir}`

	cmd="set nosplitright | set nobackup | set noswapfile"

	EXE="| silent exe"

	for f in $files; do
			if [ -z "$commit2" ]; then
					cmd+="$EXE ':tabnew $f'"
			else
					cmd+="$EXE ':tabnew | f <${commit2}>/${f} | setlocal buftype=nofile | 0read ! git show ${commit2}:$f'"
			fi
			cmd+="$EXE ':0 | filetype detect'"
			cmd+="$EXE ':vnew | f <${commit1}>/${f} | setlocal buftype=nofile | 0read ! git show ${commit1}:$f'"
			cmd+="$EXE ':0 | filetype detect'"
			cmd+="$EXE ':windo diffth'"
	done
	cmd+="$EXE 'bd 1 | tabfirst'"

	vim -c "$cmd"
}
