#!/bin/bash

DB=$DOC2/daily/daily.sqlite3

usage() {
	echo "DB: $DB"
	echo "Usage:"
	echo "       $0 -h" 
	echo "       $0 db"
	echo "       $0 sleep <sleep time> <getup time>"
	echo "       $0 done <comment...>"
	echo "       $0 todo <comment...>"
	echo "       $0 todo -d <id>"
	exit 1
}

if [[ $# -eq 0 ]]; then
	sqlite3 $DB "
		select 'getup';
		select * from getup order by date desc limit 7;
		select 'sleep';
		select * from sleep order by date desc limit 7;
		select 'done';
		select * from done where date >= date('now', 'localtime', '-7 days') order by date desc;
		select 'todo';
		select * from todo;
	"
	exit 0
fi

while [[ $# -gt 0 ]]; do
	case $1 in
		-h)
			usage
			;;
		db)
			sqlite3 $DB
			exit $?
			;;
		sleep)
			if [[ $# == 3 ]]; then
				time_re='^[0-9]{2}:[0-9]{2}$'
				if [[ $2 =~ $time_re && $3 =~ $time_re ]]; then
					sqlite3 -echo $DB "
					insert into sleep values(strftime('%Y-%m-%d', datetime('now', 'localtime', '-1 days')), '$2');
					insert into getup values(strftime('%Y-%m-%d', 'now', 'localtime'), '$3');
					"
					exit 0
				else
					echo "Invalid time format: $2 $3"
					exit 1
				fi
			fi
			usage
			;;
		done)
			shift
			if [[ $# -eq 0 ]]; then
				usage
			fi
			if [[ $# == 1 && $1 =~ ^[0-9]+$ ]]; then
				# move todo to done
				sqlite3 -echo $DB "
				insert into done select date('now', 'localtime'), comment from todo where id = $1;
				delete from todo where id = $1;
				"
				exit 0
			fi
			sqlite3 -echo $DB "insert into done values(strftime('%Y-%m-%d', 'now', 'localtime'), '$*');"
			exit 0
			;;
		todo)
			shift
			if [[ $# -eq 0 ]]; then
				usage
			fi
			if [[ $1 == '-d' ]]; then
				if [[ $# -ne 2 ]]; then
					usage
				fi
				sqlite3 -echo $DB "delete from todo where id = $2;"
			else
				sqlite3 -echo $DB "insert into todo(comment) values('$*');"
			fi
			exit 0
			;;
		*)
			usage
			;;
	esac
done

usage
