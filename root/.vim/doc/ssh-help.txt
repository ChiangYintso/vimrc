*ssh-help*

*ssh生成key*
1) ssh-keygen -t rsa -C '邮件地址@youremail.com'
2) cat ~/.ssh/id_rsa.pub
3) 将公钥复制到远程服务器
>
  ssh-copy-id username@remote_host
<


*ssh免yes登录* *scp免yes登录*
ssh <hostname> -o strictHostKeyChecking=no

*sshpass免密码登录*
sshpass -f password_file ssh <hostname>

*scp复制文件*
>
	scp .vimrc grape:
<

*ssh端口转发*

本地转发、远程转发和动态转发 ~

本地转发：ssh -L ~
在本地浏览器打开远程服务器上部署的网站。
在远程服务器启动一个http server，localhost:8080。本地浏览器打开localhost:8080后，访问请求被转发到
远程服务器的localhost:8080。

远程转发：ssh -R ~
远程服务器访问本地电脑上的服务（如squid http proxy server）
ssh -NR 3128:localhost:3128 kiwi

该命令 `ssh -NR 3128:localhost:3128 kiwi` 使用 SSH (Secure Shell) 执行了远程端口转发。让我们分解这个命令，以便更好地理解其功能：

1. ssh: 这是启动SSH客户端程序的命令，用于安全地连接到远程服务器。

2. -N: 这个选项告诉SSH客户端不执行任何远程命令。这常用于只需建立端口转发的情况。

3. -R: 这是远程端口转发的选项。与本地端口转发 (`-L`) 相反，远程端口转发允许将远程机器上的端口转发到本地机器的端口。

4. 3128:localhost:3128: 这部分指定了端口转发的具体细节。`3128:localhost:3128` 的意思是将远程机器上的3128端口转发到本地机器上的3128端口。具体来说，这意味着在远程机器（在该命令中是连接的目标服务器 `kiwi`）上的3128端口上接收的所有数据都会被转发到执行此命令的本地计算机上的3128端口。

5. kiwi: 这是您要连接的远程SSH服务器的主机名或IP地址。

综上所述，这个命令建立了一个SSH会话，用于将远程服务器（kiwi`）上的3128端口的流量转发到执行命令的本地机器上的3128端口。这种类型的端口转发通常用于将请求或服务从远程服务器重定向到本地计算机，或用于穿透防火墙的设置。

动态转发：ssh -D ~

在本地浏览器上通过“Proxy Switch Omega”代理插件 https://chrome.google.com/webstore/detail/padekgcemlokbadohgkifijomclgjgif
设置好代理（SOCKS5协议，localhost，动态转发端口号）
之后浏览器的任何网页访问请求都通过远程服务器访问。可以用于访问远程服务器才能访问的各种网址
如https://gw.ict.ac.cn，内网gitlab等

该命令 `ssh -fCD localhost:3128 grape -N` 在 SSH (Secure Shell) 中执行了几个操作。让我们分解这个命令，以便更好地理解其功能：

1. ssh: 这是启动SSH客户端程序的命令，用于安全地连接到远程服务器。

2. -f: 这个选项让SSH在后台运行。即，SSH会在建立连接后将自身放到后台运行。

3. -C: 启用压缩。SSH会尝试压缩传输的数据，这在带宽有限的情况下有助于提高传输速度。

4. -D localhost:3128: 这是设置动态端口转发的部分。`-D` 选项指定了一个本地的“动态”应用程序级端口转发。在这种情况下，SSH客户端会在本地机器的3128端口上创建一个 SOCKS 代理服务器。您可以将浏览器或其他支持SOCKS代理的程序配置为使用这个代理，从而所有通过这个代理的流量都会被安全地转发到SSH服务器，然后从那里出到Internet。

5. grape: 这是您要连接的远程SSH服务器的主机名或IP地址。在这个例子中，它看起来像是一个主机名。

6. -N: 这个选项告诉SSH不执行任何命令，不启动shell。这在你只需要端口转发时非常有用，而不是在远程机器上运行命令。

综上所述，这个命令创建了一个在后台运行的SSH会话，它在本地机器上的3128端口上设置了一个SOCKS代理，所有通过这个代理的流量都会安全地转发到名为“grape”的远程服务器。这通常用于安全的网络流量转发或绕过网络限制。


~/.vim/doc/port3128.md
-------------------------------------------------------------------------------
*ssh-x11转发远程使用GUI程序*
*x11转发共享clipboard*

https://blog.csdn.net/weixin_44966641/article/details/120365459

服务器端/etc/ssh/sshd_config ~
>
	X11Forwarding yes
	X11DisplayOffset 10
	X11UseLocalhost yes
<

sudo systemctl restart sshd.service

Linux客户端/etc/ssh/ssh_config ~
>
	ForwardAgent yes
	ForwardX11 yes
	ForwardX11Trusted yes
<

ssh -X jiangyinzuo@kiwi

NOTE: 服务器端vim初始化X11 clipboard，共享剪贴板，大概需要756ms，影响性能。
>
	865.595  756.019: setup clipboard
<
-------------------------------------------------------------------------------
*sftp-server*

~/.vim/doc/sftp-server.md
