*command-line-tool*

*tldr* 命令行帮助
*thefuck* 基于规则自动修正上一个命令的错误(too slow)

https://explainshell.com/

*shellcheck*

https://github.com/koalaman/shellcheck#from-your-terminal

命令行运行shellcheck
>
    shellcheck myscript.sh
<
shellcheck也可以集成到CI中

-------------------------------------------------------------------------------

|view|是vim的只读模式
vim/less读取另一个程序的标准输出 >
    ls | vim -
    ls | view -
    ls | less
<

整个文件系统下搜索文件：locate，但是太慢，需要提前updatedb
Ubuntu22.04下均可通过apt安装  

命令行补全目录: .local/share/bash-completion/completions

批量重命名: rename。rename有两个版本，
一种版本支持's/foo/bar/g'替换模式 (Ubuntu 23.10)，
另一种版本不支持。
>
    rename 's/opt-/hot-/g' *
<
<
    rename .ext .bak *.ext
>

计算器: *bc*
>
    echo "1.1+2.2" | bc
    echo "scale=2; 1.23456/2" | bc
<
或者直接`bc`进入交互模式
但很多时候不如 >
    python3 -c "print(1+1)"
    echo "print(1+1)" | python3
>
邮件: *himalaya* , 但其vim插件存在bug
目录树: tree

查找: find -> fd                             *find-fd*
fd默认会ignore .gitignore下的文件，要取消.gitignore可以添加`-I`flag >
	fd -I data_v2.csv
<

模糊查找: |fzf|
内容搜索: grep -> ripgrep: ripgrep, ag要比ack/grep快

rg 搜索特定文件扩展名 >
	rg Insert -t vim
<

https://jdhao.github.io/2020/02/16/ripgrep_cheat_sheet/  

下载: wget -> axel  
git终端: lazygit, tig  
Linux文本处理: awk, sed, cut
-------------------------------------------------------------------------------
*awk内置变量*
*awk-help*

https://www.runoob.com/linux/linux-comm-awk.html

FILENAME 当前文件名
FS 字段分隔符（默认空格）
NF 一行的字段数目
NR 行号（从1开始）

awk设置分隔符的例子
>
	awk 'BEGIN {FS = ","} {print $1, $2}' filename
	awk -F, '{print $1, $2}' filename
	awk -F'[ \t]+' '{print $1, $2}' filename
<
-------------------------------------------------------------------------------
cat -> bat，Ubuntu下的命令叫batcat。能让fzf.vim的preview window变快。  

>
	sudo apt install bat
	batcat --version
<

pdf导出注释: pdfannots https://github.com/0xabu/pdfannots
pdf转text: pdftotext

文件管理器:
- Netrw
- coc-explorer
- ranger
- vifm
- nnn
- lf
- fzf-filemanager https://github.com/sc0ttj/fzf-filemanager/blob/main/filemanager
- fm脚本

json: jq
补全父目录 -> bd
终端查看图片:
- timg
    - echo "set terminal png; plot sin(x);" | gnuplot | timg -pi -
- cmd.exe /c wezterm imgcat

翻译 https://github.com/afc163/fanyi#error-spawn-festival-enoent

>
	sudo apt-get install festival festvox-kallpc16k
	npm i -g fanyi
<

格式化工具

|clang-format|

-------------------------------------------------------------------------------

*github-copilot-cli*

https://docs.github.com/en/copilot/github-copilot-in-the-cli/using-github-copilot-in-the-cli

Usage:
  copilot [command]

Examples:

$ gh copilot suggest "Install git"
$ gh copilot explain "traceroute github.com"

-------------------------------------------------------------------------------

对话框 dialog

-------------------------------------------------------------------------------
*apt*

apt配置代理服务器 在`/etc/apt/apt.conf` 或者 `/etc/apt/apt.conf.d/proxy.conf`中添加
>
  Acquire::http::Proxy "http://proxy_server:proxy_port";
<

访问PPA添加第三方apt源 http://ppa.launchpad.net/jonathonf/vim/ubuntu

添加PPA, 导入GPG密钥
>
  sudo add-apt-repository ppa:jonathonf/vim
  sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4AB0F789CBA31744CC7DA76A8CF63AD3F06FC659
<

手动添加PPA源
>
  sudo vim /etc/apt/sources.list.d/jonathonf-vim.list
<
>
  deb http://ppa.launchpad.net/jonathonf/vim/ubuntu YOUR_UBUNTU_VERSION_HERE main
  deb-src http://ppa.launchpad.net/jonathonf/vim/ubuntu YOUR_UBUNTU_VERSION_HERE main
<

手动添加apt-key
>
  wget -O - http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x4AB0F789CBA31744CC7DA76A8CF63AD3F06FC659 | sudo apt-key add -
<

