*mydoc.txt*

                                My Documents~

===============================================================================

*search-help*
*search-shortcuts* (by reading help files)

`:helpgrep` `:Helptags`(fzf.vim)

*search-command* *搜索命令*
`:command`
|select-commands-in-popup-window(fzf.vim)|

*search-maps*
`:map` `:tmap` `:nnoremap` `:imap`
|select-maps(n)-in-popup-window(fzf.vim)|

*auto-completion* https://zhuanlan.zhihu.com/p/106309524
*cheetsheets* https://devhints.io/vim-help
*close-preview* `:pc`
*execute-current-line-as-vim-command* `:exe getline('.')`
*execute-selected(yanked)-text* `:@"`, see `:h :@`
*重复执行上一个命令* @:
*goto-file* gf gF CTRL-Vgf CTRL-VgF
*increment-number* CTRL-A
*paste-in-(search-)command-mode* CTRL-R"
*next-in-search-mode* *查找模式下的n和N* CTRL-G CTRL-T
*put-vim-progress-to-the-background* CTRL-Z, see linux tool `fg`, `bg`.
*save-with-sudo* `:w !sudo tee %`
*select-history-command* `q:`
*welcome* `:intro` `:smile`
*print-file*: :f

*搜索并替换整个文件中的第一个模式* `:/pattern/s//replace/`
解释：
:/pattern/s: 在满足pattern的第一行的范围下，执行:s command
//: 搜索模式为空时，默认使用上一个模式
/replace/: 替换模式
See: https://vi.stackexchange.com/questions/7194/how-to-substitute-the-first-occurrence-across-the-whole-file

*macro*
Each register is identified by a letter a to z or number 0-9 or ".
recording a macro: >
  qd	start recording to register d
  ...	your complex series of commands
  q	stop recording
  @d	execute register d (your macro)
  @@	execute your macro again
<

*create-terminal-in-new-tab* `:tab ter`
*terminal-window-executes-shortcuts* CTRL-W{shortcuts}
*yank-terminal* CTRL-WN

*close-all-the-other-windows* `:only` (similar `:tabonly`)
*split-window-with-height-10-and-open-buffer-1* `:10sp #1`

*add-to-the-end-of-line* `:%s/$/ galaxy/g`
*add-to-the-begin-of-line* `:%s/^/hello /g`
*put-grep-results-into-quickfixlist-then-execute-by-cdo* `:cdo %s/<search term>/<replace term>/cg`

*filter-quickfix* >
  :packadd cfilter
  :vimgrep /foo/
  :Cfilter /runtime/
<

-------------------------------------------------------------------------------
*git*

*git-checkout-history-file* `git checkout v0.2.2 -- markdown.vim`

*git-difftool* `git difftool HEAD mydoc.txt` or `git difftool -- mydoc.txt HEAD`

*git-mergetool*

tutorial: https://gist.github.com/karenyyng/f19ff75c60f18b4b8149
`git mergetool`

*clean-LOCAL-BASE-REMOTE-files* `git clean -i`

*find-files* (vim will be blocked if directory is too large) >
  set path+=**
  :find <file>
<

`:Fd` see .vimrc

*marks*
mark: `ma`
jump: `'a`

*tags*
See .vimrc
Comparison with ctags, gtags and cscope:
  https://github.com/oracle/opengrok/wiki/Comparison-with-Similar-Tools

gtags(global) > cscope > ctags

Universal Ctags: a maintained implementation of ctags
Exuberant Ctags: unmaintained

Install on Ubuntu: >
  sudo apt install global
  sudo apt install cscpoe
  sudo apt install universal-ctags
  # sudo apt insatll exuberant-ctags
<

*format*
*clang-format* `:%!clang-format` or `:'<,'>!clang-format`.
No need of `Plug 'rhysd/vim-clang-format'`

*lint*
*clang-tidy* 
output to quickfix list: >
  :CExprsys clang-tidy hello.cpp
<

-------------------------------------------------------------------------------
*markdown*

*marp* Markdown Presentation Ecosystem

See: https://github.com/marp-team/marp-cli

watch mode >
  npx @marp-team/marp-cli@latest note.md -w --html
<

md -> html >
  :AsyncRun npx @marp-team/marp-cli@latest note.md
<

md enable inlining html >
  :AsyncRun npx @marp-team/marp-cli@latest note.md --html
<

md -> pptx >
   npx @marp-team/marp-cli@latest llvm-udo.md --pptx --allow-local-files --html
<

-------------------------------------------------------------------------------
*lsp* *coc.nvim*
TODO: LSP formatter, LSP linter


-------------------------------------------------------------------------------
*fzf.vim*

*select-commands-in-popup-window(fzf.vim)* `:Commands`.
*select-commits-in-popup-window(fzf.vim)* `:Commits`.
*select-maps(n)-in-popup-window(fzf.vim)* `:Maps`.
*paste-to-fzf-popup-window*

"+y           yank to system
CTRL-SHIFT-V  paste

-------------------------------------------------------------------------------
*wsl*

*create-link* *mklinkd*
