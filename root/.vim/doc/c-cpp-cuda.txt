vim:ft=help
*c-cpp-cuda*

Clangd ~

*clangd*

用户全局配置文件: `~/.config/clangd/config.yaml`

项目目录 compile_flags.txt

clangd设置`compile_commands.json`文件位置为`build/release/compile_commands.json`

`.clangd`文件中添加

See: https://www.reddit.com/r/neovim/comments/vj0e16/how_to_specify_location_of_compile_commandsjson/
>
	CompileFlags:
	  CompilationDatabase: build/       # Search build/ directory for compile_commands.json
<
同时clangd启动命令添加`--compile-commands-dir=build/release`

NOTE
clangd无法解析OpenMP pragma https://github.com/clangd/clangd/issues/1640
暂时的解决方案：在`.clangd`文件中添加
>
CompileFlags:
  Remove: [-fopenmp]
<
clangd还没实现outgoing calls in call hierarchy https://github.com/llvm/llvm-project/pull/77556
--------------------------------------------------------------------------------------

*clang-format* `:%!clang-format` or `:'<,'>!clang-format`.
No need of `Plug 'rhysd/vim-clang-format'`

*clang-tidy* 
output to quickfix list: >
  :CExprsys clang-tidy hello.cpp
<

*Makefile*

= 延迟赋值，使用到变量的时候才确定变量的值
:= 立即赋值

======================================================================================
C++包管理器

*cmake*

CMake 4种编译类型 ~

Debug, Release, RelWithDebInfo, MinSizeRel

https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html

*CPM.cmake* https://github.com/cpm-cmake/CPM.cmake

使用项目：rapidsai/RAFT

*conan*

使用项目：milvus

*bazel*

使用项目：HA3

--------------------------------------------------------------------------------------
*c++20-module*

Error:
target contains C++ module sources which are not supported by the generator

Solution:
默认的make换为Ninja

Error:
CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS-NOTFOUND: not found

Solution:
手动添加CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS
set(CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS clang-scan-deps-17)

apt安装最新 *gnu-toolchain*
https://launchpad.net/~ubuntu-toolchain-r/+archive/ubuntu/test

安装最新 *llvm-toolchain*
https://apt.llvm.org/

在Ubuntu 18.04中，可以添加apt源
>
	deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main
	deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main
	# Needs 'sudo add-apt-repository ppa:ubuntu-toolchain-r/test' for libstdc++ with C++20 support
	# 16
	deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-16 main
	deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-16 main
	# 17
	deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-17 main
	deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-17 main
<

添加gpg key
>
	wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
<

*cuda*

|nvidia-docker|

cuda对gcc/clang存在版本要求，例如

cuda 12.1
>
	clang version must be less than 16 and greater than 3.2 for cuda 12.1
	gcc versions later than 12 are not supported for cuda 12.1
<

*glibc*

查看glibc版本
>
	ldd --version
<
CentOS7.1 2.18
Ubuntu18.04 为2.27

许多软件依赖2.28

**gcc版本**
2024年初，CentOS 7.1: 4.8.5
Ubuntu 16.04: 5.4.0
======================================================================================
*cpp-mistakes*

使用std::copy拷贝std::vector，而非memcpy
